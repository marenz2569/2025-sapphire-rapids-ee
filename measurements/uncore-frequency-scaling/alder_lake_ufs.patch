diff --git a/ufs-latencies/latency_test.c b/ufs-latencies/latency_test.c
index 8c08726..190f7e8 100644
--- a/ufs-latencies/latency_test.c
+++ b/ufs-latencies/latency_test.c
@@ -34,7 +34,7 @@
 #define L3_DATA_SIZE 2*1024*1024
 #define CACHE_LINE 64
 #define RAND_NUM 1234567
-#define MAX_CYCLES 20000
+#define MAX_CYCLES 2000
 
 /**
  * Returns time stamp counter
@@ -158,12 +158,16 @@ static __inline__ test_buffer_t run_buffer(test_buffer_t buffer,
 void main()
 {
     // tested UFS frequencies
-    uint64_t settings[] = { 0xc0c, 0xd0d, 0xe0e, 0xf0f, 0x1010, 0x1111, 0x1212,
-            0x1313, 0x1414, 0x1515, 0x1616, 0x1717, 0x1818 };
-
-    uint64_t default_setting= 0xc18;
+    uint64_t settings[] = { 0x404, 0x505, 0x606, 0x707, 0x808, 0x909, 0xa0a, 0xb0b, 0xc0c, 0xd0d, 0xe0e, 0xf0f, 0x1010, 0x1111, 0x1212,
+            0x1313, 0x1414, 0x1515, 0x1616, 0x1717, 0x1818, 0x1919, 0x1a1a, 0x1b1b, 0x1c1c, 0x1d1d, 0x1e1e, 0x1f1f, 0x2020, 0x2121,
+            0x2222, 0x2323, 0x2424, 0x2525, 0x2626, 0x2727, 0x2828, 0x2929, 0x2a2a, 0x2b2b, 0x2c2c, 0x2d2d, 0x2e2e, 0x2f2f };
     // nr of tested UFS frequencies
-    int nr_settings = 13;
+    int nr_settings = 43; // set to 0 to disable all-to-all test
+#ifdef NOSPECIFIC
+    nr_settings = 0;
+#endif
+
+    uint64_t default_setting= DEFAULT_RANGE;
 
     // open fd for switching msr
     int msr_fd = open("/dev/cpu/0/msr", O_RDWR);
@@ -193,6 +197,7 @@ void main()
             {
                 // set default
                 pwrite(msr_fd, &settings[source], 8, 0x620);
+
                 // run in default
                 l3_buffer = run_buffer(l3_buffer, nr, MAX_CYCLES,
                         &performance_before, &cycles_switch, &cycles_duration,
@@ -210,6 +215,7 @@ void main()
         }
     // set default again
     pwrite(msr_fd, &default_setting, 8, 0x620);
+#ifndef NOAUTO
     for (int i = 0; i < 1000; i++)
     {
         // first train for local access (L1)
@@ -226,5 +232,6 @@ void main()
                 performance_before, performance_after, cycles_switch,
                 cycles_duration);
     }
+#endif
 
 }
